AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AODN template: Sagemaker jupyter notebook for nc2zarr work

Resources:
  Notebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      DefaultCodeRepository: https://github.com/vietnguyengit/nc2zarr.git
      InstanceType: ml.r5.xlarge
      LifecycleConfigName: !GetAtt LifeCycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: !Ref AWS::StackName
      RoleArn: arn:aws:iam::615645230945:role/service-role/AmazonSageMaker-ExecutionRole-20210623T113797
      VolumeSizeInGB: 30
      Tags:
        - Key: "Managed"
          Value: "cloudformation"

  LifeCycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      OnStart:
        - Content: !Base64 |-
            #!/bin/bash
            
            set -e
            
            # OVERVIEW
            # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
            # You can change the idle time for stop using the environment variable below.
            # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
            #
            # Note that this script will fail if either condition is not met
            #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
            #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook
            #       and SageMaker:DescribeNotebookInstance to describe the notebook.
            #
            
            # PARAMETERS
            IDLE_TIME=7200
            
            echo "Fetching the autostop script"
            wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py
            
            echo "Starting the SageMaker autostop script in cron"
            
            (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -
            
            sudo -u ec2-user -i <<'EOF'
            
            # install python libs
            source /home/ec2-user/anaconda3/bin/activate mxnet_latest_p37
            pip install -r https://raw.githubusercontent.com/vietnguyengit/nc2zarr/main/requirements.txt
            source /home/ec2-user/anaconda3/bin/deactivate
            
            # install nc2zarr env
            echo ". /home/ec2-user/anaconda3/etc/profile.d/conda.sh" >> ~/.bashrc
            conda env create -f https://raw.githubusercontent.com/vietnguyengit/nc2zarr/main/environment.yml
            /home/ec2-user/anaconda3/envs/nc2zarr/bin/python -m pip install --upgrade pip
            /home/ec2-user/anaconda3/envs/nc2zarr/bin/python pip install --upgrade pandas
            /home/ec2-user/anaconda3/envs/nc2zarr/bin/python pip install h5netcdf
            
            # activate nc2zarr env and set env variable
            source /home/ec2-user/anaconda3/bin/activate nc2zarr
            conda env config vars set PYTHONPATH='/home/ec2-user/SageMaker/nc2zarr/processors'
            
            # install nc2zarr
            git clone https://github.com/vietnguyengit/nc2zarr.git
            cd nc2zarr
            python setup.py develop
            source /home/ec2-user/anaconda3/bin/deactivate
            
            EOF